/**
  Registers scss mixins rules
 */

@mixin transition($property: all, $duration: 0.2s, $timing: linear) {
  -webkit-transition: #{$property} $duration $timing;
  -moz-transition: #{$property} $duration $timing;
  -ie-transition: #{$property} $duration $timing;
  -o-transition: #{$property} $duration $timing;
  transition: $property $duration $timing;
}

/* if you need to transition a prefixed property, use this instead */
@mixin transition-with-prefix($property, $duration: 0.2s, $timing: linear) {
  -webkit-transition: -webkit-#{$property} $duration $timing;
  -moz-transition: -moz-#{$property} $duration $timing;
  -ie-transition: -moz-#{$property} $duration $timing;
  -o-transition: -o-#{$property} $duration $timing;
  transition: $property $duration $timing;
}

@mixin transform($type) {
  -webkit-transform: $type;
  -moz-transform: $type;
  -ms-transform: $type;
  -o-transform: $type;
  transform: $type;
}

@mixin animation($name, $timing: 0.5s, $delay: 0s, $count: 10) {
  -webkit-animation: $name $timing $delay $count;
  -moz-animation: $name $timing $delay $count;
  -ms-animation: $name $timing $delay $count;
  -o-animation: $name $timing $delay $count;
}

@mixin max-width($value) {
  max-width: $value;
  margin-left: auto;
  margin-right: auto;
}

@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($lower, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  }
}
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $max: breakpoint-max($name, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($name, $breakpoints) {
      @content;
    }
  }
}
